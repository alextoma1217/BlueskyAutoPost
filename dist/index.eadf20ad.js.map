{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB,IAAM;IAChD,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,MAAM,eAAe,SAAS,cAAc,CAAC;IAC7C,MAAM,qBAAqB,SAAS,cAAc,CAAC;IAEnD,IAAI,mBAAmB,IAAI;IAC3B,IAAI,mBAAmB,IAAI;IAE3B,UAAU,gBAAgB,CAAC,UAAU,OAAO,QAAU;QACpD,MAAM,cAAc;QAEpB,MAAM,WAAW,SAAS,cAAc,CAAC,iBAAiB,KAAK;QAC/D,MAAM,WAAW,SAAS,cAAc,CAAC,iBAAiB,KAAK;QAE/D,MAAM,iBAAiB;YACrB,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;YAAS;QAC5C;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,UAAU;YACvC,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM;gBACN,mBAAmB;gBACnB,mBAAmB;gBACnB,UAAU,KAAK,CAAC,OAAO,GAAG,QAAQ,kBAAkB;gBACpD,aAAa,KAAK,CAAC,OAAO,GAAG,SAAS,sBAAsB;gBAC5D,mBAAmB,KAAK,CAAC,OAAO,GAAG,SAAS,4BAA4B;YAC1E,OACE,MAAM;QAEV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qBAAqB;YACnC,MAAM;QACR;IACF;IAEA,aAAa,gBAAgB,CAAC,UAAU,OAAO,QAAU;QACvD,MAAM,cAAc;QAEpB,MAAM,UAAU,SAAS,cAAc,CAAC,WAAW,KAAK;QACxD,MAAM,OAAO,SAAS,cAAc,CAAC,QAAQ,KAAK;QAElD,MAAM,iBAAiB;YACrB,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE,UAAU;gBAAkB,UAAU;gBAAkB;gBAAS;YAAK;QAC/F;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,aAAa;YAC1C,IAAI,SAAS,EAAE,EACb,MAAM;iBAEN,MAAM;QAEV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR;IACF;IAEA,mBAAmB,gBAAgB,CAAC,SAAS,UAAY;QACvD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,kBAAkB;gBAC7C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,UAAU;gBAAiB;YACpD;YAEA,IAAI,SAAS,MAAM,KAAK,KACtB,MAAM;iBAEN,MAAM;QAEV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACF;AACF","sources":["public/client.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const loginForm = document.getElementById('loginForm');\n    const scheduleForm = document.getElementById('scheduleForm');\n    const stopScheduleButton = document.getElementById('stop-schedule');\n\n    let loggedInUsername = null;\n    let loggedInPassword = null;\n  \n    loginForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n  \n      const username = document.getElementById('loginUsername').value;\n      const password = document.getElementById('loginPassword').value;\n  \n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      };\n  \n      try {\n        const response = await fetch('/login', requestOptions);\n        if (response.ok) {\n          alert('Logged in successfully');\n          loggedInUsername = username;\n          loggedInPassword = password;\n          loginForm.style.display = 'none'; // Hide login form\n          scheduleForm.style.display = 'block'; // Show scheduler form\n          stopScheduleButton.style.display = 'block'; // Show stop schedule button\n        } else {\n          alert('Error logging in');\n        }\n      } catch (error) {\n        console.error('Error logging in:', error);\n        alert('Error logging in');\n      }\n    });\n  \n    scheduleForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n  \n      const message = document.getElementById('message').value;\n      const time = document.getElementById('time').value;\n  \n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username: loggedInUsername, password: loggedInPassword, message, time }),\n      };\n  \n      try {\n        const response = await fetch('/schedule', requestOptions);\n        if (response.ok) {\n          alert('Scheduled successfully');\n        } else {\n          alert('Error scheduling the post');\n        }\n      } catch (error) {\n        console.error('Error scheduling the post:', error);\n        alert('Error scheduling the post');\n      }\n    });\n  \n    stopScheduleButton.addEventListener('click', async () => {\n      try {\n        const response = await fetch('/stop-schedule', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ username: loggedInUsername }),\n        });\n  \n        if (response.status === 200) {\n          alert('Schedule stopped successfully!');\n        } else {\n          alert('Failed to stop schedule. No active schedule found for this user.');\n        }\n      } catch (error) {\n        console.error('Error stopping the schedule:', error);\n        alert('Failed to stop schedule. Please try again later.');\n      }\n    });\n  });\n"],"names":[],"version":3,"file":"index.eadf20ad.js.map","sourceRoot":"/__parcel_source_root/"}